
name: Package

on:
  workflow_dispatch:
    inputs:
      lambda_name:
        description: 'The lambda name (in kebab case)'
        default: 'logger'
        required: true
      dockerfile_path:
        description: 'A path to the docker file (relative to git root)'
        default: 'athena_lambda/serverless/logger'
        required: true

  workflow_call:
    inputs:
      lambda_name:
        description: 'The lambda name (in kebab case)'
        required: true
        type: string
      dockerfile_path:
        description: 'A path to the docker file (relative to git root)'
        required: true
        type: string
    # secrets:
    #   personal_access_token:
    #     required: true

env:
  AWS_ACCOUNT_ID: "025761247733"
  AWS_REGION: "ap-southeast-2"
  AWS_ROLE_NAME: "github-avalier-role"
  REPOSITORY: athena-lambda-${{inputs.lambda_name}}
  PYTHON_VERSION: "3.13"
  POETRY_VERSION: "1.8.3"
  APP_VERSION: "0.1"

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Info
        run: |
            echo "lambda_name: ${{inputs.lambda_name}}"
            echo "dockerfile_path: ${{inputs.dockerfile_path}}"
            ls -al

      - name: Build Image
        run: |
          docker build . \
            -t avalier/${{env.REPOSITORY}}:latest \
            -f ./${{inputs.dockerfile_path}}/Dockerfile \
            --build-arg PYTHON_VERSION="${{env.PYTHON_VERSION}}" \
            --build-arg POETRY_VERSION="${{env.POETRY_VERSION}}" \
            --build-arg APP_GIT_SHA="${{github.sha}}" \
            --build-arg APP_VERSION=""

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{env.AWS_ACCOUNT_ID}}:role/${{env.AWS_ROLE_NAME}}
          aws-region: ${{env.AWS_REGION}}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          ./.bin/setup_ecr_repository.sh ${{env.REPOSITORY}}
          docker tag avalier/${{env.REPOSITORY}}:latest ${{env.REGISTRY}}/${{env.REPOSITORY}}:latest
          docker push ${{env.REGISTRY}}/${{env.REPOSITORY}}:latest
        #docker tag avalier/${{env.REPOSITORY}}:latest ${{env.REGISTRY}}/${{env.REPOSITORY}}:${{github.sha}}
        #docker push ${{env.REGISTRY}}/${{env.REPOSITORY}}:${{github.sha}}

  